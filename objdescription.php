<?php

    /*************************************************************************************
     * Если в строке не указан идентификатор объявления, то пересылаем пользователя на спец. страницу
     ************************************************************************************/

    $propertyId = "0";
    if (isset($_GET['propertyId']) && $_GET['propertyId'] != "") {
        $propertyId = $_GET['propertyId']; // Получаем идентификатор объявления для показа из строки запроса
    } else {
        header('Location: 404.html'); // Если в запросе не указан идентификатор объявления для редактирования, то пересылаем пользователя в личный кабинет к списку его объявлений
    }

    /*************************************************************************************
     * Инициализируем требуемые модели
     ************************************************************************************/

    // Стартуем сессию с пользователем - сделать доступными переменные сессии
    session_start();

    // Подключаем нужные модели и представления
    include 'models/GlobFunc.php';
    include 'models/Logger.php';
    include 'models/IncomingUser.php';
    include 'views/View.php';
    include 'models/Property.php';
    include 'models/SignUpToView.php';

    // Создаем объект-хранилище глобальных функций
    $globFunc = new GlobFunc();

    // Подключаемся к БД
    $DBlink = $globFunc->connectToDB();
    // Удалось ли подключиться к БД?
    if ($DBlink == FALSE) die('Ошибка подключения к базе данных (. Попробуйте зайти к нам немного позже.');

    // Инициализируем модель для запросившего страницу пользователя
    $incomingUser = new IncomingUser($globFunc, $DBlink);

    // Инициализируем модель запроса на просмотр данного объекта данным пользователем.
    // Если он уже записался на просмотр, то в модели будут содержаться данные его запроса (время, комментарий...)
    $signUpToView = new SignUpToView($globFunc, $DBlink, $incomingUser->getId(), $propertyId);

    // Инициализируем переменную для хранения информации об успешности/неуспешности отправки запроса на просмотр в БД
    $statusOfSaveParamsToDB = NULL;

    /*************************************************************************************
     * Получаем данные объявления для просмотра, а также другие данные из БД
     ************************************************************************************/

    $property = new Property($globFunc, $DBlink, $propertyId);

    // Анкетные данные и данные о фотографиях объекта недвижимости
    $property->writeCharacteristicFromDB();
    $property->writeFotoInformationFromDB();

    /*************************************************************************************
     * Проверяем - может ли данный пользователь просматривать данное объявление
     ************************************************************************************/

    // Если объявление опубликовано, то его может просматривать каждый
    // Если объявление закрыто (снято с публикации), то его может просматривать только сам собственник
    if ($property->status == "не опубликовано" && $property->userId != $incomingUser->getId()) header('Location: 404.html');
    //TODO: реализовать соответствующую 404 страницу

    /*************************************************************************************
     * Получаем заголовок страницы
     ************************************************************************************/
    $strHeaderOfPage = $globFunc->getFirstCharUpper($property->typeOfObject)." по адресу: ".$property->address;

    /************************************************************************************
     * НОВЫЙ ЗАПРОС НА ПРОСМОТР. Если пользователь отправил форму запроса на просмотр объекта
     ***********************************************************************************/

    if (isset($_POST['signUpToViewDialogButton'])) {

        $signUpToView->writeParamsFromPOST(); // TODO: добавить проверку на заполненность комментария и удобного времени просмотра
        $statusOfSaveParamsToDB = $signUpToView->saveParamsToDB();

        //TODO: оповестить оператора о новом запросе на просмотр
    }

    /********************************************************************************
     * ФОРМИРОВАНИЕ ПРЕДСТАВЛЕНИЯ (View)
     *******************************************************************************/

    $view = new View($globFunc, $DBlink);
    $view->generate("templ_objdescription.php", array('userCharacteristic' => array('typeTenant' => $incomingUser->isTenant(), 'name' => $incomingUser->name, 'secondName' => $incomingUser->secondName, 'surname' => $incomingUser->surname, 'telephon' => $incomingUser->telephon),
                                                 'propertyCharacteristic' => $property->getCharacteristicData(),
                                                 'propertyFotoInformation' => $property->getFotoInformationData(),
                                                 'isLoggedIn' => $incomingUser->login(),
                                                 'favoritesPropertysId' => $incomingUser->getFavoritesPropertysId(),
                                                 'strHeaderOfPage' => $strHeaderOfPage,
                                                 'signUpToViewData' => $signUpToView->getParams(),
                                                 'statusOfSaveParamsToDB' => $statusOfSaveParamsToDB));

    /********************************************************************************
     * Закрываем соединение с БД
     *******************************************************************************/

    $globFunc->closeConnectToDB($DBlink);