<?php
    // Стартуем сессию с пользователем - сделать доступными переменные сессии
    session_start();

    // Подключаем нужные модели и представления
    include 'models/GlobFunc.php';
    include 'models/Logger.php';
    include 'models/IncomingUser.php';
    include 'views/View.php';
    include 'models/Property.php';

    // Создаем объект-хранилище глобальных функций
    $globFunc = new GlobFunc();

    // Подключаемся к БД
    $DBlink = $globFunc->connectToDB();
    // Удалось ли подключиться к БД?
    if ($DBlink == FALSE) die('Ошибка подключения к базе данных (. Попробуйте зайти к нам немного позже.');

    // Инициализируем модель для запросившего страницу пользователя
    $incomingUser = new IncomingUser($globFunc, $DBlink);

    // Если пользователь не авторизирован, то пересылаем юзера на страницу авторизации
    if (!$incomingUser->login()) {
        header('Location: login.php');
    }

    /*************************************************************************************
     * Если в строке не указан идентификатор объявления для редактирования, то пересылаем пользователя в личный кабинет
     ************************************************************************************/

    $propertyId = "0";
    if (isset($_GET['propertyId'])) {
        $propertyId = $_GET['propertyId']; // Получаем идентификатор объявления для редактирования из строки запроса
    } else {
        header('Location: personal.php?tabsId=3'); // Если в запросе не указан идентификатор объявления для редактирования, то пересылаем пользователя в личный кабинет к списку его объявлений
    }

    /*************************************************************************************
     * Инициализируем объект для работы с параметрами недвижимости
     ************************************************************************************/

    $property = new Property($globFunc, $DBlink, $propertyId);
    if (!$property->writeCharacteristicFromDB() || !$property->writeFotoInformationFromDB()) {
        die('Ошибка при работе с базой данных (. Попробуйте зайти к нам немного позже.'); // Если получить данные из БД не удалось, то просим пользователя зайти к нам немного позже
    }

    // Готовим массив со списком районов в городе пользователя
    $allDistrictsInCity = $globFunc->getAllDistrictsInCity("Екатеринбург");

    // Инициализируем массив для хранения ошибок проверки данных объекта недвижимости
    $errors = array();

    /**************************************************************************************************************
     * Проверяем, что пользователь имеет право редактировать данное объявление - он является собственником данного объекта недвижимости
     **************************************************************************************************************/

    if ($property->userId != $incomingUser->getId()) header('Location: personal.php?tabsId=3');

    /*************************************************************************************
     * Если пользователь заполнил и отослал форму - проверяем ее
     ************************************************************************************/

    if (isset($_POST['saveAdvertButton'])) {

        $property->writeCharacteristicFromPOST("edit");
        $property->writeFotoInformationFromPOST();

        // Проверяем корректность данных объявления. Функции isAdvertCorrect() возвращает пустой array, если введённые данные верны и array с описанием ошибок в противном случае
        $errors = $property->isAdvertCorrect("editAdvert");

        // Если данные, указанные пользователем, корректны, сохраним данные объявления в базу данных
        if (is_array($errors) && count($errors) == 0) {

            // Сохраняем отредактированные параметры объявления на текущего пользователя
            $correctSaveCharacteristicToDB = $property->saveCharacteristicToDB("edit");

            if ($correctSaveCharacteristicToDB) {

                // Сохраним информацию о фотографиях объекта недвижимости
                $correctSaveFotoInformationToDB = $property->saveFotoInformationToDB();

                if ($correctSaveFotoInformationToDB) {

                    // Пересылаем пользователя на страницу с подробным описанием его объявления - хороший способ убедиться в том, что все данные указаны верно
                    header('Location: objdescription.php?propertyId='.$property->id);

                } else {

                    $errors[] = 'К сожалению, при сохранении данных о фотографиях произошла ошибка: проверьте, пожалуйста, еще раз корректность Вашей информации и повторите попытку';
                    // Сохранении данных о фотках в БД не прошло - сами изменения в объявлении сохранене, но изменения в данных о фотографиях не сохранены.
                }


            } else {

                $errors[] = 'К сожалению, при сохранении данных произошла ошибка: проверьте, пожалуйста, еще раз корректность Вашей информации и повторите попытку';
                // Сохранении данных в БД не прошло - объявление не сохранено
            }

        }
    }

    /********************************************************************************
     * ФОРМИРОВАНИЕ ПРЕДСТАВЛЕНИЯ (View)
     *******************************************************************************/

    $view = new View($globFunc, $DBlink);
    $view->generate("templ_editadvert.php", array('propertyCharacteristic' => $property->getCharacteristicData(),
                                                 'propertyFotoInformation' => $property->getFotoInformationData(),
                                                 'errors' => $errors,
                                                 'allDistrictsInCity' => $allDistrictsInCity,
                                                 'isLoggedIn' => $incomingUser->login(),
                                                 'amountUnreadMessages' => $incomingUser->getAmountUnreadMessages()));

    /********************************************************************************
     * Закрываем соединение с БД
     *******************************************************************************/

    $globFunc->closeConnectToDB($DBlink);

    //TODO: В будущем необходимо будет проверять личные данные пользователя на полноту для его работы в качестве собственника, если у него typeOwner != "true"
